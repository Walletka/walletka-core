namespace walletka_core {

};

[NonExhaustive]
enum Network {
    "Bitcoin",
    "Testnet",
    "Signet",
    "Regtest",
};

[NonExhaustive]
enum WalletkaLayer {
    "Blockchain",
    "Lightning",
    "Cashu",
    "Fedimint",
    "Rgb",
};

[Enum]
interface WalletkaAssetLocation {
    Utxo(string loc);
    LightningChannel(string loc);
    Cashu(string loc);
    Fedimint(string loc);
};

[Enum]
interface WalletkaAssetState {
    Unknown();
    Waiting();
    Settled();
    Spent();
    Unspendable();
};

dictionary Currency {
    string symbol;
    string name;
    string base_unit_symbol;
    u64 decimals;
};

dictionary Amount {
    u64 value;
    Currency currency;
};

dictionary WalletkaBalance {
    sequence<Amount> confirmed;
    sequence<Amount> unconfirmed;
    sequence<Amount> locked;
};

dictionary WalletkaAsset {
    Amount amount;
    WalletkaLayer layer;
    WalletkaAssetLocation asset_location;
    WalletkaAssetState asset_state;
};

interface WalletkaBuilder {
    constructor();
    void set_mnemonic(string mnemonic_words);
    void set_memory_db_store();
    void set_local_db_store(string data_path);
    void set_network(Network network);
    void set_nostr_relays(sequence<string> relays);
    void set_data_path(string data_path);
    void set_electrum_url(string? electrum_url);
    Walletka build();
};

interface Walletka {
    [Async]
    void sync();
    string get_bitcoin_address();
    WalletkaBalance get_balance(string? currency_symbol);
    sequence<WalletkaAsset> get_assets();
};

